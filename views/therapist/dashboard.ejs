<% layout("/layouts/boilerplate") %>

<style>
    .dashboard-container {
        margin: 20px;
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

    .stats-container {
        display: flex;
        justify-content: space-around;
        gap: 20px;
    }

    .stat-card {
        flex: 1;
        background: linear-gradient(135deg, #007E85, #008E95);
        color: white;
        padding: 20px;
        border-radius: 8px;
        display: flex;
        flex-direction: column;
        align-items: center;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .stat-card h3 {
        font-size: 1.2em;
        margin: 0;
    }

    .stat-card h1 {
        font-size: 3em;
        font-weight: bold;
        margin: 10px 0 0;
    }

    .appointments-section,
    .chat-section {
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    }

    .appointments-section h2,
    .chat-section h2 {
        font-size: 1.5em;
        margin-bottom: 15px;
        color: #333;
    }

    .appointment-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .appointment-item div {
        flex: 1;
        text-align: left;
    }

    .appointment-time {
        font-size: 1em;
        color: #666;
    }

    .chat-section .chat-placeholder {
        color: #888;
        text-align: center;
        font-size: 1em;
        margin-top: 50px;
    }

    .completion-button {
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        font-size: 1em;
        color: white;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.3s;
    }

    .completion-button.incomplete {
        background-color: #007BFF; /* Primary color for incomplete */
    }

    .completion-button.completed {
        background-color: #28A745; /* Green color for completed */
    }

    .completion-button:hover {
        transform: translateY(-2px);
    }

    .completion-button:focus {
        outline: none;
    }
</style>

<div class="dashboard-container">
    <h1>Doctor's Dashboard</h1>

    <div class="stats-container">
        <div class="stat-card" id="total-appointments">
            <h3>Total Appointments</h3>
            <h1><%= totalAppointments %></h1>
        </div>
        <div class="stat-card" id="completed-appointments">
            <h3>Completed Appointments</h3>
            <h1 id="completed-appointments-count"><%= completedAppointments %></h1>
        </div>        
        <div class="stat-card" id="upcoming-appointments">
            <h3>Upcoming Appointments</h3>
            <h1><%= upcomingAppointments %></h1>
        </div>
        <div class="stat-card" id="todays-appointments">
            <h3>Today's Appointments</h3>
            <h1><%= todaysAppointments.length %></h1>
        </div>
    </div>

    <% if ( todaysAppointments.length > 0) { %>
    <div class="appointments-section">
        <h2>Today's Appointments</h2>
        <% todaysAppointments.forEach(appointment => { %>
            <div class="appointment-item">
                <div>
                    <strong><%= appointment.name %></strong><br>
                    <span><%= appointment.therapist %></span>
                </div>
                <div class="appointment-time">
                    <%= new Date(appointment.date).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) %>
                </div>
                <div>
                    <button class="completion-button <%= appointment.isCompleted ? 'completed' : 'incomplete' %>"
                            onclick="toggleCompletion('<%= appointment._id %>', '<%= appointment.isCompleted %>')">
                        <%= appointment.isCompleted ? 'Completed' : 'Mark as Completed' %>
                    </button>
                </div>
            </div>
        <% }) %>
    </div>
    <% } %>
</div>

<script>
    async function toggleCompletion(appointmentId, currentStatus) {
        try {
            const response = await fetch(`/doctor/${appointmentId}/toggle-completion`, {
                method: 'PATCH',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ isCompleted: !currentStatus }) // Toggle the current status
            });

            if (response.ok) {
                const updatedAppointment = await response.json();
                // Optionally, you can refresh the appointments or update the UI here
                location.reload(); // Reload the page to see the updated status
            } else {
                console.error('Failed to update appointment status');
            }
        } catch (error) {
            console.error('Error:', error);
        }
    }
</script>